//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public Core.Game.Play.MovableComponent coreGamePlayMovable { get { return (Core.Game.Play.MovableComponent)GetComponent(GameComponentsLookup.CoreGamePlayMovable); } }
    public bool hasCoreGamePlayMovable { get { return HasComponent(GameComponentsLookup.CoreGamePlayMovable); } }

    public void AddCoreGamePlayMovable(int newSpeed) {
        var index = GameComponentsLookup.CoreGamePlayMovable;
        var component = (Core.Game.Play.MovableComponent)CreateComponent(index, typeof(Core.Game.Play.MovableComponent));
        component.Speed = newSpeed;
        AddComponent(index, component);
    }

    public void ReplaceCoreGamePlayMovable(int newSpeed) {
        var index = GameComponentsLookup.CoreGamePlayMovable;
        var component = (Core.Game.Play.MovableComponent)CreateComponent(index, typeof(Core.Game.Play.MovableComponent));
        component.Speed = newSpeed;
        ReplaceComponent(index, component);
    }

    public void RemoveCoreGamePlayMovable() {
        RemoveComponent(GameComponentsLookup.CoreGamePlayMovable);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherCoreGamePlayMovable;

    public static Entitas.IMatcher<GameEntity> CoreGamePlayMovable {
        get {
            if (_matcherCoreGamePlayMovable == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.CoreGamePlayMovable);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherCoreGamePlayMovable = matcher;
            }

            return _matcherCoreGamePlayMovable;
        }
    }
}
